	*********** Express ***********

---> Iniciar proyecto en una carpeta <---
	$npm init -y

---> Modificar en el archivo el nombre de nuestro archivo inicial

---> Instalar Express
    $npm install express --save

---> Inicializar variable express en el archivo necesario

    *********** Auto - Actualizar ***********

---> Iniciar proyecto en una carpeta <---
	$npm install --save-dev nodemon

--> Copiar y pegar esto despues de "text" <--
	"start": "node app.js",
    "develop": "nodemon app.js"

--> Copiar y pegar esto en el archivo app.js <--

	const express = require('express');
	const app = express();
	const path = require('path');

	const publicPath = path.resolve(__dirname, "./public");

	app.use(express.static(publicPath));
	app.listen(3000, () => console.log('Servidor corriendo en el puerto 3000'));

	app.get('/', function(req,res){
		let htmlPath = path.resolve(__dirname, './views/home.html');
		res.sendFile(htmlPath);
	})

    *********** express-generator ***********

--> Instalarlo globalmente
	$npm install express-generator -g

--> Configurar nombre y motor
	$express myApp --ejs

--> Instalar todas las dependencias
	$npm install

--> Iniciar el servidor
	$nodemon bin/www

	*********** EJS ***********

--> Instalar EJS
	$npm i ejs --save

--> Configurar ejs en app.js
	app.set('view engine','ejs');

--> Configurar ruta de las vistas
	app.set ('views','./ruta');

	*********** PUT/DELETE ***********

--> Instalar el paquete method-override
	$npm install method-override --save

--> Instalar multer 
	$npm install multer

	*********** EXPRESS VALIDATOR ***********

--> Instalar express validator
	$npm i express-validator

	*********** EXPRESS SESSION ***********

--> Instalar express session
	$npm i express-session --save

	*********** EXPRESS COOKIES ***********

--> Instalar express cookies
	$npm i cookie-parser --save

	*********** BCRYPTJS ***********

--> Instalar bcryptjs
	$npm i bcryptjs --save

--> Configurar para quitar mensajes de error


	*********** SEQUELIZE ***********

--> Instalar sequelize
	$npm i -g sequelize
	$npm i -g sequelize-cli

--> Instalar ORM mysql 
	$npm i --save mysql2

--> Configurar el archivo en raiz llamado ".sequelizerc"

	const path = require('path');
	module.exports = {
		config: path.resolve('./database/config', 'config.js'),
		'models-path': path.resolve('./database/models'),
		'seeders-path': path.resolve('./database/seeders'),
		'migrations-path': path.resolve('./database/migrations'),
	}

--> Iniciar sequelize
	Si marca error debes cambiar la configuracion del equipo con "Set-ExecutionPolicy Unrestricted"
	$sequelize init

--> Configurar el archivo config.js
	1.- Hacerlo module.exports
	2.- Configurar la base de datos development, usuario, contrase√±a, nombre de la DB